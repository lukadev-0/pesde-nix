name: Update versions

permissions:
  contents: write

on:
  workflow_dispatch:
  schedule:
    # Run every day at 18:30 UTC
    - cron: '30 18 * * *'

concurrency:
  # Ensure this workflow does not run twice at the same time
  group: ${{ github.workflow }}

env:
  CACHIX_CACHE: pesde

jobs:
  fetch:
    name: Fetch new releases
    runs-on: ubuntu-24.04

    outputs:
      releases: ${{ steps.fetch.outputs.releases }}

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Install Nix
        uses: cachix/install-nix-action@v31
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Cachix
        uses: cachix/cachix-action@v16
        with:
          name: ${{ env.CACHIX_CACHE }}
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
          skipPush: true

      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Fetch releases
        id: fetch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          releases="$(cachix watch-exec $CACHIX_CACHE -- nix develop -c lune run scripts/update.luau --fetch-releases)"
          if [ -n "$releases" ]; then
            echo "releases=$releases" >> "$GITHUB_OUTPUT"
            git push --force origin HEAD:update-staging
          fi

  build:
    name: Build (${{ matrix.os }})
    runs-on: ${{ matrix.os }}

    needs: fetch
    if: needs.fetch.outputs.releases != ''

    strategy:
      matrix:
        os: [ubuntu-24.04, ubuntu-24.04-arm, macos-15, macos-15-intel]

    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          ref: update-staging

      - name: Install Nix
        uses: cachix/install-nix-action@v31
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Cachix
        uses: cachix/cachix-action@v16
        with:
          name: ${{ env.CACHIX_CACHE }}
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
          skipPush: true

      - name: Install extra dependencies
        if: matrix.os == 'macos-15' || matrix.os == 'macos-15-intel'
        run: brew install openssl@3

      - name: Update versions
        env:
          releases: ${{ needs.fetch.outputs.releases }}
        run: |
          jq --compact-output '.[]' <<< "$releases"
          cachix watch-exec $CACHIX_CACHE -- nix develop -c lune run scripts/update.luau --releases-stdin --build --push-to-cachix <<< "$releases"

  push:
    name: Push changes
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          ref: update-staging

      - name: Merge and push
        run: |
          git pull --rebase origin main
          git push origin update-staging:main
